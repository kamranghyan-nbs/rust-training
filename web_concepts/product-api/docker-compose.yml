version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: product_api_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: product_api
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product_api_web
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/product_api
      JWT_SECRET: your-secret-key-here-make-it-long-and-secure
      RUST_LOG: debug
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: "no"
    # Temporarily disable health check for debugging
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge